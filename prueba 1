local Library = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()
local SaveManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/SaveManager.luau"))()
local InterfaceManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/InterfaceManager.luau"))()
 
local Window = Library:CreateWindow{
    Title = "Pheonix | Free",
    SubTitle = "by KBS_Alejandro",
    TabWidth = 160,
    Size = UDim2.fromOffset(1087, 690.5),
    Resize = true, -- Resize this ^ Size according to a 1920x1080 screen, good for mobile users but may look weird on some devices
    MinSize = Vector2.new(470, 380),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Amethyst Dark",
    MinimizeKey = Enum.KeyCode.RightControl -- Used when theres no MinimizeKeybind
}

-- Fluent Renewed provides ALL 1544 Lucide 0.469.0 https://lucide.dev/icons/ Icons and ALL 9072 Phosphor 2.1.0 https://phosphoricons.com/ Icons for the tabs, icons are optional
local Tabs = {
  Main = Window:CreateTab{
    	Title = "Main",
    	Icon = "house"
    },
    Farm = Window:CreateTab{
        Title = "Farm",
        Icon = "wheat"
    },
  	Misc = Window:CreateTab{
        Title = "Misc",
        Icon = "settings"
    },
	Pets = Window:CreateTab{
        Title = "Pets",
        Icon = "heart"
    },
  	Stats = Window:CreateTab{
        Title = "Stats",
        Icon = "trending-up"
    },
	Calculator = Window:CreateTab{
        Title = "Calculator",
        Icon = "calculator"
    },
	Killer = Window:CreateTab{
        Title = "Killer",
        Icon = "sword"
    },
	Teleport = Window:CreateTab{
        Title = "Teleport",
        Icon = "zap"
    },
    Credits = Window:CreateTab{
        Title = "Credits",
        Icon = "users"
    }
}
local Options = Library.Options

Library:Notify{
    Title = "Welcome to Galaxy Hub",
    Content = "Galaxy Hub On Top",
    SubContent = "The Best Script For Muscle Legends", -- Optional
    Duration = 13 -- Set to nil to make the notification not disappear
}

Tabs.Main:AddSection("Discord Server Link")

Tabs.Main:CreateButton({
    Title = "Click to Copy Link",
    Description = "This allows you to join our Discord server and get update pings and more.",
    Callback = function()
        Window:Dialog({
            Title = "Join Our Discord",
            Content = "Would you like to copy the invite link to our Discord server?",
            Buttons = {
                {
                    Title = "Confirm",
                    Callback = function()
                        local link = "https://discord.gg/rnDrhTZZCF"
                        setclipboard(link)
                        print("Copied Discord link to clipboard.")
                    end
                }
            }
        })
    end
})

Tabs.Main:AddSection("Auto Brawls")

local godModeToggle = Tabs.Main:CreateToggle("godModeToggle", {
    Title = "God Mode (Brawl)",
    Default = false
})

godModeToggle:OnChanged(function(state)
    godModeToggle = state

    if godModeToggle then
        task.spawn(function()
            while godModeToggle do
                game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                task.wait(0.1) -- peque침o delay para evitar lag
            end
        end)
    end
end)

-- 游댠 Auto Win Brawls
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Toggle
local autoWinBrawlToggle = Tabs.Main:CreateToggle("autoWinBrawl", {
    Title = "Auto Win Brawls",
    Default = false
})

-- Estado global
getgenv().autoWinBrawl = false

-- Funci칩n para equipar el Punch
local function equipPunch()
    if not getgenv().autoWinBrawl then return end
    local character = LocalPlayer.Character
    if not character then return false end
    if character:FindFirstChild("Punch") then return true end

    local backpack = LocalPlayer.Backpack
    if not backpack then return false end

    for _, tool in pairs(backpack:GetChildren()) do
        if tool:IsA("Tool") and tool.Name == "Punch" then
            tool.Parent = character
            return true
        end
    end
    return false
end

-- Validaci칩n de objetivo
local function isValidTarget(player)
    if not player or not player.Parent then return false end
    if player == LocalPlayer then return false end
    if _G.whitelistedPlayers and table.find(_G.whitelistedPlayers, player.Name) then return false end

    local character = player.Character
    if not character then return false end
    local humanoid = character:FindFirstChild("Humanoid")
    if not humanoid or humanoid.Health <= 0 or humanoid:GetState() == Enum.HumanoidStateType.Dead then
        return false
    end

    local rootPart = character:FindFirstChild("HumanoidRootPart")
    return rootPart ~= nil
end

-- Validar si el jugador local est치 listo
local function isLocalPlayerReady()
    local character = LocalPlayer.Character
    if not character then return false end
    local humanoid = character:FindFirstChild("Humanoid")
    if not humanoid or humanoid.Health <= 0 then return false end
    return character:FindFirstChild("LeftHand") or character:FindFirstChild("RightHand")
end

-- Safe firetouchinterest
local function safeTouchInterest(targetPart, localPart)
    if not targetPart or not localPart then return false end
    return pcall(function()
        firetouchinterest(targetPart, localPart, 0)
        task.wait(0.01)
        firetouchinterest(targetPart, localPart, 1)
    end)
end

-- Cuando cambia el toggle
autoWinBrawlToggle:OnChanged(function(state)
    getgenv().autoWinBrawl = state

    if state then
        -- Auto Join Brawl
        task.spawn(function()
            while getgenv().autoWinBrawl and task.wait(0.5) do
                pcall(function()
                    if LocalPlayer.PlayerGui.gameGui.brawlJoinLabel.Visible then
                        game.ReplicatedStorage.rEvents.brawlEvent:FireServer("joinBrawl")
                        LocalPlayer.PlayerGui.gameGui.brawlJoinLabel.Visible = false
                    end
                end)
            end
        end)

        -- Auto Equip Punch
        task.spawn(function()
            while getgenv().autoWinBrawl and task.wait(0.5) do
                equipPunch()
            end
        end)

        -- Auto Punch
        task.spawn(function()
            while getgenv().autoWinBrawl and task.wait(0.1) do
                if isLocalPlayerReady() and game.ReplicatedStorage.brawlInProgress.Value then
                    pcall(function() LocalPlayer.muscleEvent:FireServer("punch", "rightHand") end)
                    pcall(function() LocalPlayer.muscleEvent:FireServer("punch", "leftHand") end)
                end
            end
        end)

        -- Auto Hit Enemies
        task.spawn(function()
            while getgenv().autoWinBrawl and task.wait(0.05) do
                if isLocalPlayerReady() and game.ReplicatedStorage.brawlInProgress.Value then
                    local character = LocalPlayer.Character
                    local leftHand = character:FindFirstChild("LeftHand")
                    local rightHand = character:FindFirstChild("RightHand")

                    for _, player in pairs(Players:GetPlayers()) do
                        if not getgenv().autoWinBrawl then break end
                        if isValidTarget(player) then
                            local targetRoot = player.Character:FindFirstChild("HumanoidRootPart")
                            if leftHand then safeTouchInterest(targetRoot, leftHand) end
                            if rightHand then safeTouchInterest(targetRoot, rightHand) end
                        end
                        task.wait(0.01)
                    end
                end
            end
        end)
    end
end)

-- 游댠 Auto Join Brawl
local autoJoinBrawl = Tabs.Main:CreateToggle("autoJoinBrawl", {
    Title = "Auto Join Brawl",
    Default = false
})

-- Estado global
getgenv().autoJoinBrawl = false

-- Cuando cambie el toggle
autoJoinBrawl:OnChanged(function(state)
    getgenv().autoJoinBrawl = state

    if state then
        task.spawn(function()
            while getgenv().autoJoinBrawl and task.wait(0.5) do
                pcall(function()
                    if game.Players.LocalPlayer.PlayerGui.gameGui.brawlJoinLabel.Visible then
                        game.ReplicatedStorage.rEvents.brawlEvent:FireServer("joinBrawl")
                        game.Players.LocalPlayer.PlayerGui.gameGui.brawlJoinLabel.Visible = false
                    end
                end)
            end
        end)
    end
end)


Tabs.Home:AddSection("Local Player Configurations")

local timeDropdown = Tabs.Home:AddDropdown("ChangeTime", {
    Title = "Change Time",
    Values = {"Night", "Day", "Midnight"},
    Default = "Day",
    Callback = function(selection)
        local lighting = game:GetService("Lighting")

        if selection == "Night" then
            lighting.ClockTime = 0
        elseif selection == "Day" then
            lighting.ClockTime = 12
        elseif selection == "Midnight" then
            lighting.ClockTime = 6
        end
    end
})

local Toggle = Tabs.Killing:CreateToggle("AutoPunchNoAnim", {Title = "Auto Punch (No Anim)", Default = false})
Toggle:OnChanged(function(state)
    while state and Toggle.Value do
        local player = game.Players.LocalPlayer
        local char = game.Workspace:FindFirstChild(player.Name)
        local punchTool = player.Backpack:FindFirstChild("Punch") or (char and char:FindFirstChild("Punch"))

        if punchTool then
            if punchTool.Parent ~= char then
                punchTool.Parent = char -- Equip
            end

            player.muscleEvent:FireServer("punch", "rightHand")
            player.muscleEvent:FireServer("punch", "leftHand")
        else
            warn("Punch tool not found")
            Toggle:SetValue(false) -- Stop if tool not found
        end
        task.wait()
    end
end)

-- Speed Punch Button
Tabs.Killing:CreateButton({
    Title = "Fast Punch",
    Callback = function()
        local player = game.Players.LocalPlayer
        local punch = player.Backpack:FindFirstChild("Punch") or (game.Workspace:FindFirstChild(player.Name) and game.Workspace[player.Name]:FindFirstChild("Punch"))
        if punch and punch:FindFirstChild("attackTime") then
            punch.attackTime.Value = 0.065
        end
    end
})

-- Normal Punch Button
Tabs.Killing:CreateButton({
    Title = "Normal Punch",
    Callback = function()
        local player = game.Players.LocalPlayer
        local punch = player.Backpack:FindFirstChild("Punch") or (game.Workspace:FindFirstChild(player.Name) and game.Workspace[player.Name]:FindFirstChild("Punch"))
        if punch and punch:FindFirstChild("attackTime") then
            punch.attackTime.Value = 0.35
        end
    end
})

	-- Whitelist Table
local whitelist = {}
local playerList = {}

-- Create Dropdown
local Dropdown = Tabs.Killing:AddDropdown("WhitelistDropdown", {
    Title = "Whitelist Player(s)",
    Values = {},
    Multi = true,
    Default = {},
})

-- Populate initially
for _, player in ipairs(game.Players:GetPlayers()) do
    table.insert(playerList, player.Name)
end
Dropdown:SetValues(playerList)

-- Update on PlayerAdded
game.Players.PlayerAdded:Connect(function(player)
    table.insert(playerList, player.Name)
    Dropdown:SetValues(playerList)
end)

-- Update on PlayerRemoving
game.Players.PlayerRemoving:Connect(function(player)
    for i, name in ipairs(playerList) do
        if name == player.Name then
            table.remove(playerList, i)
            break
        end
    end
    Dropdown:SetValues(playerList)
end)

-- Sync whitelist
Dropdown:OnChanged(function(selectedPlayers)
    table.clear(whitelist)
    for _, name in ipairs(selectedPlayers) do
        whitelist[name] = true
    end
    print("Whitelisted:", selectedPlayers)
end)

local AutokillToggle = Tabs.Killing:CreateToggle("AutoKill", {Title = "Auto Kill", Default = false})
AutokillToggle:OnChanged(function(state)
    while state and AutokillToggle.Value do
        local player = game.Players.LocalPlayer

        -- Auto punch setup
        local punch = player.Backpack:FindFirstChild("Punch") or (player.Character and player.Character:FindFirstChild("Punch"))
        if punch and punch:FindFirstChild("attackTime") then
            punch.attackTime.Value = 0.065
        end

        -- Auto kill logic
        for _, target in ipairs(game.Players:GetPlayers()) do
            if target ~= player and not whitelist[target.Name] then
                local root = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
                local rHand = player.Character and player.Character:FindFirstChild("RightHand")
                local lHand = player.Character and player.Character:FindFirstChild("LeftHand")

                if root and rHand and lHand then
                    firetouchinterest(rHand, root, 1)
                    firetouchinterest(lHand, root, 1)
                    firetouchinterest(rHand, root, 0)
                    firetouchinterest(lHand, root, 0)
                end
            end
        end

        task.wait(0.1)
    end
end)

-- Target Kill
-- Target Kill (Dropdown en lugar de Input)
local targetPlayerName = nil

-- Dropdown din치mico
local targetPlayerList = {}
local TargetDropdown = Tabs.Killing:AddDropdown("TargetPlayerDropdown", {
    Title = "Target Player",
    Values = {},
    Multi = false, -- solo uno
    Default = {}
})

-- Llenar inicialmente
for _, player in ipairs(game.Players:GetPlayers()) do
    table.insert(targetPlayerList, player.Name)
end
TargetDropdown:SetValues(targetPlayerList)

-- Actualizar al entrar jugador
game.Players.PlayerAdded:Connect(function(player)
    table.insert(targetPlayerList, player.Name)
    TargetDropdown:SetValues(targetPlayerList)
end)

-- Actualizar al salir jugador
game.Players.PlayerRemoving:Connect(function(player)
    for i, name in ipairs(targetPlayerList) do
        if name == player.Name then
            table.remove(targetPlayerList, i)
            break
        end
    end
    TargetDropdown:SetValues(targetPlayerList)
end)

-- Guardar el jugador seleccionado
TargetDropdown:OnChanged(function(selected)
    targetPlayerName = selected
    print("Target set to:", targetPlayerName)
end)

-- Auto Kill Target
local Toggle = Tabs.Killing:CreateToggle("AutoKillTarget", {Title = "Auto Kill Player", Default = false})
Toggle:OnChanged(function(state)
    while state and Toggle.Value do
        local player = game.Players.LocalPlayer
        local target = game.Players:FindFirstChild(targetPlayerName)

        if target and target ~= player then
            local root = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
            local rHand = player.Character and player.Character:FindFirstChild("RightHand")
            local lHand = player.Character and player.Character:FindFirstChild("LeftHand")

            if root and rHand and lHand then
                firetouchinterest(rHand, root, 1)
                firetouchinterest(lHand, root, 1)
                firetouchinterest(rHand, root, 0)
                firetouchinterest(lHand, root, 0)
            end
        end
        task.wait(0.1)
    end
end)

-- Spectate Player (Dropdown + Bot칩n de volver)
local spectateTarget = nil
local spectatePlayerList = {}
local Camera = workspace.CurrentCamera
local LocalPlayer = game.Players.LocalPlayer

-- Dropdown
local SpectateDropdown = Tabs.Killing:AddDropdown("SpectateDropdown", {
    Title = "Spectate Player",
    Values = {},
    Multi = false,
    Default = {}
})

-- Llenar inicialmente con nombres
for _, player in ipairs(game.Players:GetPlayers()) do
    if player ~= LocalPlayer then
        table.insert(spectatePlayerList, player.Name)
    end
end
SpectateDropdown:SetValues(spectatePlayerList)

-- Actualizar al entrar
game.Players.PlayerAdded:Connect(function(player)
    if player ~= LocalPlayer then
        table.insert(spectatePlayerList, player.Name)
        SpectateDropdown:SetValues(spectatePlayerList)
    end
end)

-- Actualizar al salir
game.Players.PlayerRemoving:Connect(function(player)
    for i, name in ipairs(spectatePlayerList) do
        if name == player.Name then
            table.remove(spectatePlayerList, i)
            break
        end
    end
    SpectateDropdown:SetValues(spectatePlayerList)

    if spectateTarget == player.Name then
        spectateTarget = nil
        local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid")
        if hum then
            Camera.CameraSubject = hum
        end
    end
end)

-- Guardar seleccionado
SpectateDropdown:OnChanged(function(selected)
    spectateTarget = selected
    print("Spectating:", spectateTarget or "None")
end)

-- Bot칩n para volver a ti
Tabs.Killing:CreateButton({
    Title = "Dejar de Espectear",
    Callback = function()
        spectateTarget = nil
        local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid")
        if hum then
            Camera.CameraSubject = hum
        end
        print("Stopped spectating, returned to self")
    end
})

-- Seguir al jugador
game:GetService("RunService").RenderStepped:Connect(function()
    if spectateTarget then
        local target = game.Players:FindFirstChild(spectateTarget)
        if target and target.Character then
            local hum = target.Character:FindFirstChild("Humanoid")
            if hum then
                Camera.CameraSubject = hum
            end
        end
    end
end)

-- Teleport / Follow Player
local followTarget = nil
local following = false
local Camera = workspace.CurrentCamera
local LocalPlayer = game.Players.LocalPlayer

-- God Mode (Brawl)
local godModeToggle = Tabs.Killing:CreateToggle("GodModeBrawl", {
    Title = "God Mode (Brawl)",
    Default = false
})

godModeToggle:OnChanged(function(State)
    if State then
        task.spawn(function()
            while godModeToggle.Value do
                game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                task.wait(0) -- spam constante
            end
        end)
    end
end)


Tabs.Killing:CreateButton({
    Title = "Activar pegar muerto",
    Callback = function()
        loadstring(game:HttpGet("pon aca tu raw del pegar muerto "))()
    end
})
