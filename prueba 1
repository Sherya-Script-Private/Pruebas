local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Sherya-Script-Private/Elerium-V5/refs/heads/main/Library", true))()

local window = library:AddWindow("Sherya Script | Galaxy Hub", {
    main_color = Color3.fromRGB(0, 0, 0),
    min_size = Vector2.new(550, 550),
    can_resize = true,
})

local Rebirth = window:AddTab("Rebirth")
local Strength = window:AddTab("Strength")
local Opti = window:AddTab("Optimizacion")
local Calculator = window:AddTab("Calculator")
local creditsTab = window:AddTab("Credits")

-- Servicios y jugador
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

local function unequipAllPetsPremium()
    local petsFolder = player.petsFolder
    for _, folder in pairs(petsFolder:GetChildren()) do
        if folder:IsA("Folder") then
            for _, pet in pairs(folder:GetChildren()) do
                ReplicatedStorage.rEvents.equipPetEvent:FireServer("unequipPet", pet)
            end
        end
    end
    task.wait(0.1)
end

local function equipUniquePetPremium(petName)
    unequipAllPetsPremium()
    task.wait(0.01)
    for _, pet in pairs(player.petsFolder.Unique:GetChildren()) do
        if pet.Name == petName then
            ReplicatedStorage.rEvents.equipPetEvent:FireServer("equipPet", pet)
        end
    end
end

local function findMachine(machineName)
    local machine = workspace.machinesFolder:FindFirstChild(machineName)
    if not machine then
        for _, folder in pairs(workspace:GetChildren()) do
            if folder:IsA("Folder") and folder.Name:find("machines") then
                machine = folder:FindFirstChild(machineName)
                if machine then
                    break
                end
            end
        end
    end
    return machine
end

local function pressEPremium()
    VirtualInputManager:SendKeyEvent(true, "E", false, game)
    task.wait(0.1)
    VirtualInputManager:SendKeyEvent(false, "E", false, game)
end

local targetRebirthPremium = math.huge
Rebirth:AddTextBox(
    "Target Rebirth",
    function(text)
        targetRebirthPremium = tonumber(text) or math.huge
    end
)

local isRunning = false
Rebirth:AddSwitch(
    "Rebirth Farm",
    function(bool)
        isRunning = bool

        task.spawn(
            function()
                while isRunning do
                    local currentRebirths = player.leaderstats.Rebirths.Value
                    local rebirthCost = 10000 + (5000 * currentRebirths)

                    if player.ultimatesFolder:FindFirstChild("Golden Rebirth") then
                        local goldenRebirths = player.ultimatesFolder["Golden Rebirth"].Value
                        rebirthCost = math.floor(rebirthCost * (1 - (goldenRebirths * 0.1)))
                    end

                    unequipAllPetsPremium()
                    task.wait(0.1)
                    equipUniquePetPremium("Swift Samurai")

                    while isRunning and player.leaderstats.Strength.Value < rebirthCost do
                        for i = 1, 10 do
                            player.muscleEvent:FireServer("rep")
                        end
                        task.wait()
                    end

                    unequipAllPetsPremium()
                    task.wait(0.1)
                    equipUniquePetPremium("Tribal Overlord")

                    local machine = findMachine("Jungle Bar Lift")
                    if machine and machine:FindFirstChild("interactSeat") then
                        player.Character.HumanoidRootPart.CFrame = machine.interactSeat.CFrame * CFrame.new(0, 3, 0)
                        repeat
                            task.wait(0.1)
                            pressEPremium()
                        until player.Character.Humanoid.Sit
                    end

                    local initialRebirths = player.leaderstats.Rebirths.Value
                    repeat
                        ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                        task.wait(0.1)
                    until player.leaderstats.Rebirths.Value > initialRebirths

                    if not isRunning then
                        break
                    end
                    task.wait()
                end
            end
        )
    end
)

Rebirth:AddLabel("-----Extra-----")

local positionLockConnection = nil
local function lockPlayerPosition(position)
    if positionLockConnection then
        positionLockConnection:Disconnect()
    end

    positionLockConnection =
        RunService.Heartbeat:Connect(
        function()
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character.HumanoidRootPart.CFrame = position
            end
        end
    )
end

local function unlockPlayerPosition()
    if positionLockConnection then
        positionLockConnection:Disconnect()
        positionLockConnection = nil
    end
end

Rebirth:AddSwitch(
    "Lock Position",
    function(bool)
        if bool then
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local currentPosition = player.Character.HumanoidRootPart.CFrame
                lockPlayerPosition(currentPosition)
            end
        else
            unlockPlayerPosition()
        end
    end
)

Strength:AddLabel("-----Fast Strength OP-----")

fastStrengthToggle = Strength:AddSwitch("Pack Farm | Fast Strength", function(state)
    fastStrength = state

    if state then
        if packFarmTarget and targetPackToggle then
            packFarmTarget = false
            targetPackToggle:Set(false)
        end
        if packFarmInfinite and infinitePackToggle then
            packFarmInfinite = false
            infinitePackToggle:Set(false)
        end

        task.spawn(function()
            equipSpecificPacks("Swift Samurai", 8)
            while fastStrength do
                for _ = 1, 28 do
                    player.muscleEvent:FireServer("rep")
                end
                task.wait()
            end
            unequipAllPets()
        end)
    else
        unequipAllPets()
    end
end)

local function eatProteinEgg()
    pcall(function()
        local backpack = player:WaitForChild("Backpack")
        local character = player.Character or player.CharacterAdded:Wait()

        local egg = backpack:FindFirstChild("Protein Egg")
        if egg then
            egg.Parent = character
            egg:Activate()
        end
    end)
end

-- Spawn para auto eat
task.spawn(function()
    while true do
        if autoEatEnabled then
            eatProteinEgg()
            task.wait(1800) -- 30 minutos
        else
            task.wait(1)
        end
    end
end)

Strength:AddLabel("-----Extra-----")
-- Switches y botones corregidos para FarmTab
Strength:AddSwitch("Auto Eat Egg 30 Minutes", function(state)
    autoEatEnabled = state
end)

Opti:AddLabel("Anti Lag OP")

Opti:AddButton("Anti Lag", function()
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    local lighting = game:GetService("Lighting")

    -- Eliminar todas las GUIs del jugador
    for _, gui in pairs(playerGui:GetChildren()) do
        if gui:IsA("ScreenGui") then
            gui:Destroy()
        end
    end

    -- Quitar partículas
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("ParticleEmitter") then
            obj:Destroy()
        end
    end

    -- Quitar luces
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("PointLight") or obj:IsA("SpotLight") or obj:IsA("SurfaceLight") then
            obj:Destroy()
        end
    end

    -- Eliminar cielos existentes
    for _, v in pairs(lighting:GetChildren()) do
        if v:IsA("Sky") then
            v:Destroy()
        end
    end

    -- Crear cielo oscuro
    local darkSky = Instance.new("Sky")
    darkSky.Name = "DarkSky"
    darkSky.SkyboxBk = "rbxassetid://0"
    darkSky.SkyboxDn = "rbxassetid://0"
    darkSky.SkyboxFt = "rbxassetid://0"
    darkSky.SkyboxLf = "rbxassetid://0"
    darkSky.SkyboxRt = "rbxassetid://0"
    darkSky.SkyboxUp = "rbxassetid://0"
    darkSky.Parent = lighting

    lighting.Brightness = 0
    lighting.ClockTime = 0
    lighting.TimeOfDay = "00:00:00"
    lighting.OutdoorAmbient = Color3.new(0, 0, 0)
    lighting.Ambient = Color3.new(0, 0, 0)
    lighting.FogColor = Color3.new(0, 0, 0)
    lighting.FogEnd = 100

    -- Refuerzo periódico del anti-lag
    task.spawn(function()
        while true do
            wait(5)
            if not lighting:FindFirstChild("DarkSky") then
                darkSky:Clone().Parent = lighting
            end
            lighting.Brightness = 0
            lighting.ClockTime = 0
            lighting.OutdoorAmbient = Color3.new(0, 0, 0)
            lighting.Ambient = Color3.new(0, 0, 0)
            lighting.FogColor = Color3.new(0, 0, 0)
            lighting.FogEnd = 100
        end
    end)
end)

Opti:AddLabel("")
Opti:AddLabel("-----Secion-----")
-- Tiempo de sesión
local sessionStartTime = tick()
local sessionLabel = Opti:AddLabel("Tiempo de Sesión: 0d 0h 0m 0s")
sessionLabel.TextSize = 20

task.spawn(function()
    while true do
        local elapsed = tick() - sessionStartTime
        local days = math.floor(elapsed / 86400)
        local hours = math.floor((elapsed % 86400) / 3600)
        local minutes = math.floor((elapsed % 3600) / 60)
        local seconds = math.floor(elapsed % 60)
        
        sessionLabel.Text = string.format("Tiempo de Sesión: %dd %dh %dm %ds", days, hours, minutes, seconds)
        task.wait(1)
    end
end)

Opti:AddLabel("")
Opti:AddLabel("-----AFK-----")

Opti:AddButton("Anti AFK", function()
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Anti AFK",
        Text = "Anti AFK se ha activado correctamente!",
        Duration = 3,
        Button1 = "OK"
    })
    
    local GC = getconnections or get_signal_cons
    if GC then
        for i, v in pairs(GC(game.Players.LocalPlayer.Idled)) do
            if v["Disable"] then
                v["Disable"](v)
            elseif v["Disconnect"] then
                v["Disconnect"](v)
            end
        end
    else
        local VirtualUser = game:GetService("VirtualUser")
        game:GetService("Players").LocalPlayer.Idled:Connect(function()
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new())
        end)
    end
    
    task.spawn(function()
        while task.wait(30) do
            local VirtualUser = game:GetService("VirtualUser")
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new())
        end
    end)
end)

-- CALCULATOR CORREGIDO (STRENGTH, DURABILITY Y REBIRTHS)
local strengthStartValue = 0
local durabilityStartValue = 0
local rebirthsStartValue = 0
local strengthStartTime = 0
local durabilityStartTime = 0
local rebirthsStartTime = 0
local strengthActive = false
local durabilityActive = false
local rebirthsActive = false

-- Crear folders para Strength, Durability y Rebirths
local strengthFolder = Calculator:AddFolder("Strength")
local durabilityFolder = Calculator:AddFolder("Durability")
local rebirthsFolder = Calculator:AddFolder("Rebirths")

-- Función mejorada para formatear números
local function formatNumber(num)
    if num == math.huge then
        return "∞"
    elseif num == 0 then
        return "0"
    elseif num < 0.01 and num > 0 then
        return "~0"
    end
    
    local abs = math.abs(num)
    local sign = num < 0 and "-" or ""
    
    if abs >= 1e30 then
        return sign .. string.format("%.2f", abs / 1e30) .. "No"
    elseif abs >= 1e27 then
        return sign .. string.format("%.2f", abs / 1e27) .. "Oc"
    elseif abs >= 1e24 then
        return sign .. string.format("%.2f", abs / 1e24) .. "Sp"
    elseif abs >= 1e21 then
        return sign .. string.format("%.2f", abs / 1e21) .. "Sx"
    elseif abs >= 1e18 then
        return sign .. string.format("%.2f", abs / 1e18) .. "Qt"
    elseif abs >= 1e15 then
        return sign .. string.format("%.2f", abs / 1e15) .. "Qd"
    elseif abs >= 1e12 then
        return sign .. string.format("%.2f", abs / 1e12) .. "T"
    elseif abs >= 1e9 then
        return sign .. string.format("%.2f", abs / 1e9) .. "B"
    elseif abs >= 1e6 then
        return sign .. string.format("%.2f", abs / 1e6) .. "M"
    elseif abs >= 1e3 then
        return sign .. string.format("%.2f", abs / 1e3) .. "K"
    else
        return sign .. string.format("%.2f", abs)
    end
end

-- Función para obtener valor actual de estadística
local function getCurrentStrength()
    local player = game.Players.LocalPlayer
    if player and player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Strength") then
        return player.leaderstats.Strength.Value
    end
    return 0
end

local function getCurrentDurability()
    local player = game.Players.LocalPlayer
    if player and player:FindFirstChild("Durability") then
        return player.Durability.Value
    end
    return 0
end

local function getCurrentRebirths()
    local player = game.Players.LocalPlayer
    if player and player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Rebirths") then
        return player.leaderstats.Rebirths.Value
    elseif player and player:FindFirstChild("Rebirths") then
        return player.Rebirths.Value
    end
    return 0
end

-- Crear labels para Strength
local strengthLabels = {
    status = strengthFolder:AddLabel("Status: Presiona Start para comenzar"),
    current = strengthFolder:AddLabel("Current: 0"),
    gained = strengthFolder:AddLabel("Gained: 0"),
    perMinute = strengthFolder:AddLabel("Per Minute: 0"),
    perHour = strengthFolder:AddLabel("Per Hour: 0"),
    perDay = strengthFolder:AddLabel("Per Day: 0")
}

-- Crear labels para Durability
local durabilityLabels = {
    status = durabilityFolder:AddLabel("Status: Presiona Start para comenzar"),
    current = durabilityFolder:AddLabel("Current: 0"),
    gained = durabilityFolder:AddLabel("Gained: 0"),
    perMinute = durabilityFolder:AddLabel("Per Minute: 0"),
    perHour = durabilityFolder:AddLabel("Per Hour: 0"),
    perDay = durabilityFolder:AddLabel("Per Day: 0")
}

-- Crear labels para Rebirths
local rebirthsLabels = {
    status = rebirthsFolder:AddLabel("Status: Presiona Start para comenzar"),
    current = rebirthsFolder:AddLabel("Current: 0"),
    gained = rebirthsFolder:AddLabel("Gained: 0"),
    perMinute = rebirthsFolder:AddLabel("Per Minute: 0"),
    perHour = rebirthsFolder:AddLabel("Per Hour: 0"),
    perDay = rebirthsFolder:AddLabel("Per Day: 0")
}

-- Función para actualizar labels de Strength
local function updateStrengthLabels()
    local currentStrength = getCurrentStrength()
    local currentTime = tick()
    
    strengthLabels.current.Text = "Current: " .. formatNumber(currentStrength)
    
    if strengthActive and strengthStartTime > 0 then
        local timeElapsed = currentTime - strengthStartTime
        local gained = currentStrength - strengthStartValue
        
        strengthLabels.gained.Text = "Gained: " .. formatNumber(gained)
        
        if timeElapsed >= 60 then -- Solo calcular después de 1 minuto
            local perMinute = (gained / timeElapsed) * 60
            local perHour = perMinute * 60
            local perDay = perHour * 24
            
            strengthLabels.status.Text = "Status:  Activo"
            strengthLabels.perMinute.Text = "Per Minute: " .. formatNumber(perMinute)
            strengthLabels.perHour.Text = "Per Hour: " .. formatNumber(perHour)
            strengthLabels.perDay.Text = "Per Day: " .. formatNumber(perDay)
        else
            local remaining = 60 - timeElapsed
            strengthLabels.status.Text = "Status:  Calculando... " .. math.ceil(remaining) .. "s"
            strengthLabels.perMinute.Text = "Per Minute: Calculando..."
            strengthLabels.perHour.Text = "Per Hour: Calculando..."
            strengthLabels.perDay.Text = "Per Day: Calculando..."
        end
    else
        strengthLabels.gained.Text = "Gained: 0"
        strengthLabels.perMinute.Text = "Per Minute: 0"
        strengthLabels.perHour.Text = "Per Hour: 0"
        strengthLabels.perDay.Text = "Per Day: 0"
    end
end

-- Función para actualizar labels de Durability
local function updateDurabilityLabels()
    local currentDurability = getCurrentDurability()
    local currentTime = tick()
    
    durabilityLabels.current.Text = "Current: " .. formatNumber(currentDurability)
    
    if durabilityActive and durabilityStartTime > 0 then
        local timeElapsed = currentTime - durabilityStartTime
        local gained = currentDurability - durabilityStartValue
        
        durabilityLabels.gained.Text = "Gained: " .. formatNumber(gained)
        
        if timeElapsed >= 60 then -- Solo calcular después de 1 minuto
            local perMinute = (gained / timeElapsed) * 60
            local perHour = perMinute * 60
            local perDay = perHour * 24
            
            durabilityLabels.status.Text = "Status:  Activo"
            durabilityLabels.perMinute.Text = "Per Minute: " .. formatNumber(perMinute)
            durabilityLabels.perHour.Text = "Per Hour: " .. formatNumber(perHour)
            durabilityLabels.perDay.Text = "Per Day: " .. formatNumber(perDay)
        else
            local remaining = 60 - timeElapsed
            durabilityLabels.status.Text = "Status: ⏳ Calculando... " .. math.ceil(remaining) .. "s"
            durabilityLabels.perMinute.Text = "Per Minute: Calculando..."
            durabilityLabels.perHour.Text = "Per Hour: Calculando..."
            durabilityLabels.perDay.Text = "Per Day: Calculando..."
        end
    else
        durabilityLabels.gained.Text = "Gained: 0"
        durabilityLabels.perMinute.Text = "Per Minute: 0"
        durabilityLabels.perHour.Text = "Per Hour: 0"
        durabilityLabels.perDay.Text = "Per Day: 0"
    end
end

-- Función para actualizar labels de Rebirths
local function updateRebirthsLabels()
    local currentRebirths = getCurrentRebirths()
    local currentTime = tick()
    
    rebirthsLabels.current.Text = "Current: " .. formatNumber(currentRebirths)
    
    if rebirthsActive and rebirthsStartTime > 0 then
        local timeElapsed = currentTime - rebirthsStartTime
        local gained = currentRebirths - rebirthsStartValue
        
        rebirthsLabels.gained.Text = "Gained: " .. formatNumber(gained)
        
        if timeElapsed >= 60 then -- Solo calcular después de 1 minuto
            local perMinute = (gained / timeElapsed) * 60
            local perHour = perMinute * 60
            local perDay = perHour * 24
            
            rebirthsLabels.status.Text = "Status:  Activo"
            rebirthsLabels.perMinute.Text = "Per Minute: " .. formatNumber(perMinute)
            rebirthsLabels.perHour.Text = "Per Hour: " .. formatNumber(perHour)
            rebirthsLabels.perDay.Text = "Per Day: " .. formatNumber(perDay)
        else
            local remaining = 60 - timeElapsed
            rebirthsLabels.status.Text = "Status:  Calculando... " .. math.ceil(remaining) .. "s"
            rebirthsLabels.perMinute.Text = "Per Minute: Calculando..."
            rebirthsLabels.perHour.Text = "Per Hour: Calculando..."
            rebirthsLabels.perDay.Text = "Per Day: Calculando..."
        end
    else
        rebirthsLabels.gained.Text = "Gained: 0"
        rebirthsLabels.perMinute.Text = "Per Minute: 0"
        rebirthsLabels.perHour.Text = "Per Hour: 0"
        rebirthsLabels.perDay.Text = "Per Day: 0"
    end
end

-- Botones de control para Strength
strengthFolder:AddButton("Start Strength Calculator", function()
    strengthActive = true
    strengthStartTime = tick()
    strengthStartValue = getCurrentStrength()
    strengthLabels.status.Text = "Status:  Iniciado - Calculando..."
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Calculator";
        Text = "Strength Calculator iniciado!";
        Duration = 3;
    })
end)

strengthFolder:AddButton("Stop Strength Calculator", function()
    strengthActive = false
    strengthStartTime = 0
    strengthStartValue = 0
    strengthLabels.status.Text = "Status:  Detenido"
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Calculator";
        Text = "Strength Calculator detenido!";
        Duration = 3;
    })
end)

-- Botones de control para Durability
durabilityFolder:AddButton("Start Durability Calculator", function()
    durabilityActive = true
    durabilityStartTime = tick()
    durabilityStartValue = getCurrentDurability()
    durabilityLabels.status.Text = "Status:  Iniciado - Calculando..."
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Calculator";
        Text = "Durability Calculator iniciado!";
        Duration = 3;
    })
end)

durabilityFolder:AddButton("Stop Durability Calculator", function()
    durabilityActive = false
    durabilityStartTime = 0
    durabilityStartValue = 0
    durabilityLabels.status.Text = "Status:  Detenido"
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Calculator";
        Text = "Durability Calculator detenido!";
        Duration = 3;
    })
end)

-- Botones de control para Rebirths
rebirthsFolder:AddButton("Start Rebirths Calculator", function()
    rebirthsActive = true
    rebirthsStartTime = tick()
    rebirthsStartValue = getCurrentRebirths()
    rebirthsLabels.status.Text = "Status:  Iniciado - Calculando..."
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Calculator";
        Text = "Rebirths Calculator iniciado!";
        Duration = 3;
    })
end)

rebirthsFolder:AddButton("Stop Rebirths Calculator", function()
    rebirthsActive = false
    rebirthsStartTime = 0
    rebirthsStartValue = 0
    rebirthsLabels.status.Text = "Status:  Detenido"
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Calculator";
        Text = "Rebirths Calculator detenido!";
        Duration = 3;
    })
end)

-- Botón para reiniciar todos los calculators
Calculator:AddButton("Reset All Calculators", function()
    -- Reset Strength
    strengthActive = false
    strengthStartTime = 0
    strengthStartValue = 0
    strengthLabels.status.Text = "Status: Presiona Start para comenzar"
    
    -- Reset Durability
    durabilityActive = false
    durabilityStartTime = 0
    durabilityStartValue = 0
    durabilityLabels.status.Text = "Status: Presiona Start para comenzar"
    
    -- Reset Rebirths
    rebirthsActive = false
    rebirthsStartTime = 0
    rebirthsStartValue = 0
    rebirthsLabels.status.Text = "Status: Presiona Start para comenzar"
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Calculator";
        Text = "Todos los calculators han sido reiniciados!";
        Duration = 3;
    })
end)

Calculator:AddLabel("Instrucciones:")
Calculator:AddLabel("1. Presiona 'Start' en la stat que quieras medir")
Calculator:AddLabel("2. Espera 1 minuto para ver los cálculos")
Calculator:AddLabel("3. Los valores se actualizan automáticamente")

-- Loop principal del calculator
task.spawn(function()
    while true do
        updateStrengthLabels()
        updateDurabilityLabels()
        updateRebirthsLabels()
        task.wait(1) -- Actualizar cada segundo
    end
end)

print("Calculator completo - Strength, Durability y Rebirths")

creditsTab:AddLabel("╭──────────────────────────╮")
creditsTab:AddLabel(" Script hecho por Isabella")
creditsTab:AddLabel("╰──────────────────────────╯")
creditsTab:AddLabel("")
creditsTab:AddLabel("User de Roblox: MissSherya")
creditsTab:AddLabel("Instagram: Sherya_Luck")
creditsTab:AddLabel("TikTok: Sherya6000")
creditsTab:AddLabel("Discord: isabella_hrz")
creditsTab:AddLabel("")
creditsTab:AddLabel("Thanks por usar el script")
creditsTab:AddLabel("")
creditsTab:AddLabel("Recomienda el script para hacer mas actualizaciones")
creditsTab:AddLabel("Hago peticiones de otros juegos")
creditsTab:AddLabel("Diviertete amiguito")

creditsTab:AddButton("Servidor Discord", function()
    setclipboard("https://discord.gg/rnDrhTZZCF")
end)
